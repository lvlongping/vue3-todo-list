declare const _default: import("vue").DefineComponent<{
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    changeSize: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    quickGo: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    selectComponentClass: import("vue-types").VueTypeValidableDef<any>;
    current: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    pageSizeOptions: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    } & {
        default: () => unknown[];
    };
    pageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    buildOptionText: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    locale: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    rootPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    selectPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    goButton: import("vue-types").VueTypeValidableDef<any>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    changeSize: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    quickGo: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    selectComponentClass: import("vue-types").VueTypeValidableDef<any>;
    current: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    pageSizeOptions: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    } & {
        default: () => unknown[];
    };
    pageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    buildOptionText: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    locale: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    rootPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    selectPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    goButton: import("vue-types").VueTypeValidableDef<any>;
}>>, {
    locale: {
        [key: string]: any;
    };
    current: number;
    rootPrefixCls: string;
    changeSize: (...args: any[]) => any;
    quickGo: (...args: any[]) => any;
    pageSizeOptions: unknown[];
    pageSize: number;
    buildOptionText: (...args: any[]) => any;
    selectPrefixCls: string;
}>;
export default _default;
