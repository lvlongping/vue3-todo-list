import type { ExtractPropTypes } from 'vue';
export declare const transferListBodyProps: {
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    filteredRenderItems: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    } & {
        default: () => unknown[];
    };
    selectedKeys: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    showRemove: import("vue-types").VueTypeValidableDef<boolean>;
    pagination: import("vue-types").VueTypeValidableDef<any>;
    onItemSelect: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onScroll: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onItemRemove: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
};
export declare type TransferListBodyProps = Partial<ExtractPropTypes<typeof transferListBodyProps>>;
declare const ListBody: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    filteredRenderItems: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    } & {
        default: () => unknown[];
    };
    selectedKeys: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    showRemove: import("vue-types").VueTypeValidableDef<boolean>;
    pagination: import("vue-types").VueTypeValidableDef<any>;
    onItemSelect: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onScroll: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onItemRemove: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("scroll" | "itemSelect" | "itemRemove")[], "scroll" | "itemSelect" | "itemRemove", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    filteredRenderItems: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    } & {
        default: () => unknown[];
    };
    selectedKeys: import("vue-types").VueTypeValidableDef<unknown[]> & {
        default: () => unknown[];
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    showRemove: import("vue-types").VueTypeValidableDef<boolean>;
    pagination: import("vue-types").VueTypeValidableDef<any>;
    onItemSelect: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onScroll: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onItemRemove: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
}>> & {
    onScroll?: (...args: any[]) => any;
    onItemSelect?: (...args: any[]) => any;
    onItemRemove?: (...args: any[]) => any;
}, {
    onScroll: (...args: any[]) => any;
    prefixCls: string;
    selectedKeys: unknown[];
    filteredRenderItems: unknown[];
    onItemSelect: (...args: any[]) => any;
    onItemRemove: (...args: any[]) => any;
}>;
export default ListBody;
