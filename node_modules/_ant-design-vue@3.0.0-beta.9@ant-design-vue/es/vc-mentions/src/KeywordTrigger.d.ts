import type { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    loading: import("vue-types").VueTypeValidableDef<boolean>;
    options: {
        type: PropType<Partial<import("vue").ExtractPropTypes<{
            value: StringConstructor;
            disabled: BooleanConstructor;
            label: (FunctionConstructor | StringConstructor | NumberConstructor)[];
        }>>[]>;
        default: () => any[];
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    placement: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    visible: import("vue-types").VueTypeValidableDef<boolean>;
    transitionName: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    getPopupContainer: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    direction: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    loading: import("vue-types").VueTypeValidableDef<boolean>;
    options: {
        type: PropType<Partial<import("vue").ExtractPropTypes<{
            value: StringConstructor;
            disabled: BooleanConstructor;
            label: (FunctionConstructor | StringConstructor | NumberConstructor)[];
        }>>[]>;
        default: () => any[];
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    placement: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    visible: import("vue-types").VueTypeValidableDef<boolean>;
    transitionName: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    getPopupContainer: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    direction: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
}>>, {
    prefixCls: string;
    direction: string;
    getPopupContainer: (...args: any[]) => any;
    transitionName: string;
    options: Partial<import("vue").ExtractPropTypes<{
        value: StringConstructor;
        disabled: BooleanConstructor;
        label: (FunctionConstructor | StringConstructor | NumberConstructor)[];
    }>>[];
    placement: string;
}>;
export default _default;
