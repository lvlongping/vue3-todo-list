import type { PropType } from 'vue';
export declare type CollapsibleType = 'header' | 'disabled';
export declare type ActiveKeyType = Array<string | number> | string | number;
declare const collapseProps: () => {
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    activeKey: {
        type: PropType<ActiveKeyType>;
    };
    defaultActiveKey: {
        type: PropType<ActiveKeyType>;
    };
    accordion: import("vue-types").VueTypeValidableDef<boolean>;
    destroyInactivePanel: import("vue-types").VueTypeValidableDef<boolean>;
    bordered: import("vue-types").VueTypeValidableDef<boolean>;
    expandIcon: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    openAnimation: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    expandIconPosition: import("vue-types").VueTypeDef<"left" | "right">;
    collapsible: {
        type: PropType<CollapsibleType>;
    };
    ghost: import("vue-types").VueTypeValidableDef<boolean>;
};
declare const collapsePanelProps: () => {
    openAnimation: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    header: import("vue-types").VueTypeValidableDef<any>;
    headerClass: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    showArrow: import("vue-types").VueTypeValidableDef<boolean>;
    isActive: import("vue-types").VueTypeValidableDef<boolean>;
    destroyInactivePanel: import("vue-types").VueTypeValidableDef<boolean>;
    /** @deprecated Use `collapsible="disabled"` instead */
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    accordion: import("vue-types").VueTypeValidableDef<boolean>;
    forceRender: import("vue-types").VueTypeValidableDef<boolean>;
    expandIcon: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    extra: import("vue-types").VueTypeValidableDef<any>;
    panelKey: import("vue-types").VueTypeDef<string | number>;
    collapsible: {
        type: PropType<CollapsibleType>;
    };
    role: StringConstructor;
    onItemClick: {
        type: PropType<(panelKey: string | number) => void>;
    };
};
export { collapseProps, collapsePanelProps };
