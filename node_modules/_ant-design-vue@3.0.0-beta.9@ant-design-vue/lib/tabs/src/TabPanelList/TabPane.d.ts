import type { VueNode, Key } from '../../../_util/type';
export interface TabPaneProps {
    tab?: VueNode | (() => VueNode);
    disabled?: boolean;
    forceRender?: boolean;
    closable?: boolean;
    closeIcon?: () => VueNode;
    prefixCls?: string;
    tabKey?: Key;
    id?: string;
    animated?: boolean;
    active?: boolean;
    destroyInactiveTabPane?: boolean;
}
declare const _default: import("vue").DefineComponent<{
    tab: import("vue-types").VueTypeValidableDef<any>;
    disabled: {
        type: BooleanConstructor;
    };
    forceRender: {
        type: BooleanConstructor;
    };
    closable: {
        type: BooleanConstructor;
    };
    animated: {
        type: BooleanConstructor;
    };
    active: {
        type: BooleanConstructor;
    };
    destroyInactiveTabPane: {
        type: BooleanConstructor;
    };
    prefixCls: {
        type: StringConstructor;
    };
    tabKey: {
        type: (StringConstructor | NumberConstructor)[];
    };
    id: {
        type: StringConstructor;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tab: import("vue-types").VueTypeValidableDef<any>;
    disabled: {
        type: BooleanConstructor;
    };
    forceRender: {
        type: BooleanConstructor;
    };
    closable: {
        type: BooleanConstructor;
    };
    animated: {
        type: BooleanConstructor;
    };
    active: {
        type: BooleanConstructor;
    };
    destroyInactiveTabPane: {
        type: BooleanConstructor;
    };
    prefixCls: {
        type: StringConstructor;
    };
    tabKey: {
        type: (StringConstructor | NumberConstructor)[];
    };
    id: {
        type: StringConstructor;
    };
}>>, {
    active: boolean;
    disabled: boolean;
    closable: boolean;
    forceRender: boolean;
    animated: boolean;
    destroyInactiveTabPane: boolean;
}>;
export default _default;
