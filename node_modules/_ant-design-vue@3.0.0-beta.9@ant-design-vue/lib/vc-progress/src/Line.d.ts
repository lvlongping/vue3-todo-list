declare const _default: import("vue").DefineComponent<{
    gapDegree: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    gapPosition: {
        type: import("vue").PropType<import("./types").GapPositionType>;
    };
    percent: {
        type: import("vue").PropType<number | number[]>;
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    strokeColor: {
        type: import("vue").PropType<import("./types").StrokeColorType>;
    };
    strokeLinecap: {
        type: import("vue").PropType<import("./types").StrokeLinecapType>;
    };
    strokeWidth: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    trailColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    trailWidth: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    transition: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    gapDegree: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    gapPosition: {
        type: import("vue").PropType<import("./types").GapPositionType>;
    };
    percent: {
        type: import("vue").PropType<number | number[]>;
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    strokeColor: {
        type: import("vue").PropType<import("./types").StrokeColorType>;
    };
    strokeLinecap: {
        type: import("vue").PropType<import("./types").StrokeLinecapType>;
    };
    strokeWidth: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    trailColor: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    trailWidth: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    transition: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
}>>, {
    prefixCls: string;
    transition: string;
    strokeWidth: number;
    gapDegree: number;
    trailColor: string;
    trailWidth: number;
}>;
export default _default;
