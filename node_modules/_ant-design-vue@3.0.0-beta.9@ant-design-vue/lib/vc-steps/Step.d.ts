import type { CSSProperties } from 'vue';
export declare const VcStepProps: () => {
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    wrapperStyle: import("vue-types").VueTypeValidableDef<CSSProperties>;
    itemWidth: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    active: import("vue-types").VueTypeValidableDef<boolean>;
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    status: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    iconPrefix: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    icon: import("vue-types").VueTypeValidableDef<any>;
    adjustMarginRight: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    stepNumber: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    stepIndex: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    description: import("vue-types").VueTypeValidableDef<any>;
    title: import("vue-types").VueTypeValidableDef<any>;
    subTitle: import("vue-types").VueTypeValidableDef<any>;
    progressDot: import("vue-types").VueTypeDef<any>;
    tailContent: import("vue-types").VueTypeValidableDef<any>;
    icons: import("vue-types").VueTypeLooseShape<{
        finish: any;
        error: any;
    }>;
    onClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onStepClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    stepIcon: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
};
declare const _default: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    wrapperStyle: import("vue-types").VueTypeValidableDef<CSSProperties>;
    itemWidth: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    active: import("vue-types").VueTypeValidableDef<boolean>;
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    status: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    iconPrefix: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    icon: import("vue-types").VueTypeValidableDef<any>;
    adjustMarginRight: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    stepNumber: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    stepIndex: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    description: import("vue-types").VueTypeValidableDef<any>;
    title: import("vue-types").VueTypeValidableDef<any>;
    subTitle: import("vue-types").VueTypeValidableDef<any>;
    progressDot: import("vue-types").VueTypeDef<any>;
    tailContent: import("vue-types").VueTypeValidableDef<any>;
    icons: import("vue-types").VueTypeLooseShape<{
        finish: any;
        error: any;
    }>;
    onClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onStepClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    stepIcon: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "stepClick")[], "click" | "stepClick", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    wrapperStyle: import("vue-types").VueTypeValidableDef<CSSProperties>;
    itemWidth: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    active: import("vue-types").VueTypeValidableDef<boolean>;
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    status: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    iconPrefix: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    icon: import("vue-types").VueTypeValidableDef<any>;
    adjustMarginRight: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    stepNumber: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    stepIndex: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    description: import("vue-types").VueTypeValidableDef<any>;
    title: import("vue-types").VueTypeValidableDef<any>;
    subTitle: import("vue-types").VueTypeValidableDef<any>;
    progressDot: import("vue-types").VueTypeDef<any>;
    tailContent: import("vue-types").VueTypeValidableDef<any>;
    icons: import("vue-types").VueTypeLooseShape<{
        finish: any;
        error: any;
    }>;
    onClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    onStepClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    stepIcon: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
}>> & {
    onClick?: (...args: any[]) => any;
    onStepClick?: (...args: any[]) => any;
}, {
    onClick: (...args: any[]) => any;
    prefixCls: string;
    status: string;
    itemWidth: string;
    stepIcon: (...args: any[]) => any;
    iconPrefix: string;
    onStepClick: (...args: any[]) => any;
    adjustMarginRight: string;
    stepNumber: number;
    stepIndex: number;
}>;
export default _default;
