"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textAreaProps = exports.inputDefaultValue = exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _vueTypes = _interopRequireDefault(require("../_util/vue-types"));

var _omit = _interopRequireDefault(require("../_util/omit"));

var inputDefaultValue = Symbol();
exports.inputDefaultValue = inputDefaultValue;
var inputProps = {
  id: _vueTypes.default.string,
  prefixCls: _vueTypes.default.string,
  inputPrefixCls: _vueTypes.default.string,
  defaultValue: _vueTypes.default.oneOfType([_vueTypes.default.string, _vueTypes.default.number]),
  value: {
    type: [String, Number, Symbol],
    default: undefined
  },
  placeholder: {
    type: [String, Number]
  },
  autocomplete: String,
  type: {
    type: String,
    default: 'text'
  },
  name: _vueTypes.default.string,
  size: {
    type: String
  },
  disabled: _vueTypes.default.looseBool,
  readonly: _vueTypes.default.looseBool,
  addonBefore: _vueTypes.default.any,
  addonAfter: _vueTypes.default.any,
  prefix: _vueTypes.default.any,
  suffix: _vueTypes.default.any,
  autofocus: _vueTypes.default.looseBool,
  allowClear: _vueTypes.default.looseBool,
  lazy: _vueTypes.default.looseBool.def(true),
  maxlength: _vueTypes.default.number,
  loading: _vueTypes.default.looseBool,
  bordered: _vueTypes.default.looseBool,
  htmlSize: Number,
  onPressEnter: _vueTypes.default.func,
  onKeydown: _vueTypes.default.func,
  onKeyup: _vueTypes.default.func,
  onFocus: _vueTypes.default.func,
  onBlur: _vueTypes.default.func,
  onChange: _vueTypes.default.func,
  onInput: _vueTypes.default.func,
  'onUpdate:value': _vueTypes.default.func,
  valueModifiers: Object
};
var _default = inputProps;
exports.default = _default;
var textAreaProps = (0, _extends2.default)((0, _extends2.default)({}, (0, _omit.default)(inputProps, ['prefix', 'addonBefore', 'addonAfter', 'suffix'])), {
  autosize: {
    type: [Boolean, Object],
    default: undefined
  },
  autoSize: {
    type: [Boolean, Object],
    default: undefined
  },
  showCount: {
    type: [Boolean, Object]
  },
  onResize: {
    type: Function
  },
  onCompositionstart: _vueTypes.default.func,
  onCompositionend: _vueTypes.default.func,
  valueModifiers: Object
});
exports.textAreaProps = textAreaProps;